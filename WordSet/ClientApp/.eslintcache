[{"D:\\ray\\workspace\\own\\WordSet\\WordSet\\ClientApp\\src\\registerServiceWorker.js":"1","D:\\ray\\workspace\\own\\WordSet\\WordSet\\ClientApp\\src\\components\\NavMenu.js":"2","D:\\ray\\workspace\\own\\WordSet\\WordSet\\ClientApp\\src\\components\\Home.js":"3","D:\\ray\\workspace\\own\\WordSet\\WordSet\\ClientApp\\src\\index.js":"4","D:\\ray\\workspace\\own\\WordSet\\WordSet\\ClientApp\\src\\App.js":"5","D:\\ray\\workspace\\own\\WordSet\\WordSet\\ClientApp\\src\\components\\Layout.js":"6","D:\\ray\\workspace\\own\\WordSet\\WordSet\\ClientApp\\src\\components\\WordsViewer.js":"7","D:\\ray\\workspace\\own\\WordSet\\WordSet\\ClientApp\\src\\components\\About.js":"8","D:\\ray\\workspace\\own\\WordSet\\WordSet\\ClientApp\\src\\components\\Wizard.js":"9","D:\\ray\\workspace\\own\\WordSet\\WordSet\\ClientApp\\src\\components\\Uploader.js":"10"},{"size":4121,"mtime":1606701178157,"results":"11","hashOfConfig":"12"},{"size":1460,"mtime":1607562235582,"results":"13","hashOfConfig":"12"},{"size":6523,"mtime":1607756641272,"results":"14","hashOfConfig":"12"},{"size":521,"mtime":1606701178156,"results":"15","hashOfConfig":"12"},{"size":513,"mtime":1607757972293,"results":"16","hashOfConfig":"12"},{"size":373,"mtime":1606701178163,"results":"17","hashOfConfig":"12"},{"size":1215,"mtime":1607504628433,"results":"18","hashOfConfig":"12"},{"size":595,"mtime":1607566317841,"results":"19","hashOfConfig":"12"},{"size":2263,"mtime":1607757972325,"results":"20","hashOfConfig":"12"},{"size":915,"mtime":1607756621783,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1u5z9nw",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\ray\\workspace\\own\\WordSet\\WordSet\\ClientApp\\src\\registerServiceWorker.js",[],"D:\\ray\\workspace\\own\\WordSet\\WordSet\\ClientApp\\src\\components\\NavMenu.js",[],"D:\\ray\\workspace\\own\\WordSet\\WordSet\\ClientApp\\src\\components\\Home.js",["44","45","46","47","48","49","50","51"],"D:\\ray\\workspace\\own\\WordSet\\WordSet\\ClientApp\\src\\index.js",[],"D:\\ray\\workspace\\own\\WordSet\\WordSet\\ClientApp\\src\\App.js",[],"D:\\ray\\workspace\\own\\WordSet\\WordSet\\ClientApp\\src\\components\\Layout.js",[],"D:\\ray\\workspace\\own\\WordSet\\WordSet\\ClientApp\\src\\components\\WordsViewer.js",["52"],"import React, { Component } from 'react';\r\nimport { Tag } from 'antd';\r\nimport { Grid, Row, Col } from 'react-flexbox-grid';\r\nimport axios from 'axios';\r\n\r\nconst wordStyles = {\r\n    fontFamily: 'sans-serif',\r\n    textAlign: 'center',\r\n    padding: 10,\r\n};\r\n\r\nexport class WordsViewer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { words: [] };\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.calculationId !== prevProps.calculationId) {\r\n            axios.get('/wordset/' + this.props.calculationId).then(res => {\r\n                this.setState({ words: res.data });\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.calculationId) return (null);\r\n        const { words } = this.state;\r\n        const listItems = words.map((word) =>\r\n            <Col xs><Tag>{word}</Tag></Col>\r\n        );\r\n        const link = \"/Results/\" + this.props.calculationId + \".txt\";\r\n        return (\r\n            <div>\r\n                <p>Word Count: {words.length} <a href={link}>Download</a></p>\r\n                <Grid fluid>\r\n                    <Row>{listItems}</Row>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","D:\\ray\\workspace\\own\\WordSet\\WordSet\\ClientApp\\src\\components\\About.js",["53"],"D:\\ray\\workspace\\own\\WordSet\\WordSet\\ClientApp\\src\\components\\Wizard.js",["54","55","56"],"import React, { useState } from 'react';\r\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\r\n\r\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\r\n\r\n// Wizard is a single Formik instance whose children are each page of the\r\n// multi-step form. The form is submitted on each forward transition (can only\r\n// progress with valid input), whereas a backwards step is allowed with\r\n// incomplete data. A snapshot of form state is used as initialValues after each\r\n// transition. Each page has an optional submit handler, and the top-level\r\n// submit is called when the final page is submitted.\r\nconst Wizard = ({ children, initialValues, onSubmit }) => {\r\n  const [stepNumber, setStepNumber] = useState(0);\r\n  const steps = React.Children.toArray(children);\r\n  const [snapshot, setSnapshot] = useState(initialValues);\r\n\r\n  const step = steps[stepNumber];\r\n  const totalSteps = steps.length;\r\n  const isLastStep = stepNumber === totalSteps - 1;\r\n\r\n  const next = values => {\r\n    setSnapshot(values);\r\n    setStepNumber(Math.min(stepNumber + 1, totalSteps - 1));\r\n  };\r\n\r\n  const previous = values => {\r\n    setSnapshot(values);\r\n    setStepNumber(Math.max(stepNumber - 1, 0));\r\n  };\r\n\r\n  const handleSubmit = async (values, bag) => {\r\n    if (step.props.onSubmit) {\r\n      await step.props.onSubmit(values, bag);\r\n    }\r\n    if (isLastStep) {\r\n      return onSubmit(values, bag);\r\n    } else {\r\n      bag.setTouched({});\r\n      next(values);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={snapshot}\r\n      onSubmit={handleSubmit}\r\n      validationSchema={step.props.validationSchema}\r\n    >\r\n      {formik => (\r\n        <Form>\r\n          <p>\r\n            Step {stepNumber + 1} of {totalSteps}\r\n          </p>\r\n          {step}\r\n          <div style={{ display: 'flex' }}>\r\n            {stepNumber > 0 && (\r\n              <button onClick={() => previous(formik.values)} type=\"button\">\r\n                Back\r\n              </button>\r\n            )}\r\n            <div>\r\n              <button disabled={formik.isSubmitting} type=\"submit\">\r\n                {isLastStep ? 'Submit' : 'Next'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport { Wizard };\r\n\r\n","D:\\ray\\workspace\\own\\WordSet\\WordSet\\ClientApp\\src\\components\\Uploader.js",[],{"ruleId":"57","severity":1,"message":"58","line":3,"column":8,"nodeType":"59","messageId":"60","endLine":3,"endColumn":14},{"ruleId":"57","severity":1,"message":"61","line":6,"column":8,"nodeType":"59","messageId":"60","endLine":6,"endColumn":22},{"ruleId":"57","severity":1,"message":"62","line":8,"column":10,"nodeType":"59","messageId":"60","endLine":8,"endColumn":24},{"ruleId":"57","severity":1,"message":"63","line":9,"column":10,"nodeType":"59","messageId":"60","endLine":9,"endColumn":22},{"ruleId":"57","severity":1,"message":"64","line":9,"column":24,"nodeType":"59","messageId":"60","endLine":9,"endColumn":29},{"ruleId":"57","severity":1,"message":"65","line":11,"column":10,"nodeType":"59","messageId":"60","endLine":11,"endColumn":22},{"ruleId":"57","severity":1,"message":"66","line":12,"column":13,"nodeType":"59","messageId":"60","endLine":12,"endColumn":16},{"ruleId":"57","severity":1,"message":"67","line":161,"column":17,"nodeType":"59","messageId":"60","endLine":161,"endColumn":24},{"ruleId":"57","severity":1,"message":"68","line":6,"column":7,"nodeType":"59","messageId":"60","endLine":6,"endColumn":17},{"ruleId":"69","severity":1,"message":"70","line":4,"column":3,"nodeType":"71","messageId":"72","endLine":6,"endColumn":4},{"ruleId":"57","severity":1,"message":"63","line":2,"column":10,"nodeType":"59","messageId":"60","endLine":2,"endColumn":22},{"ruleId":"57","severity":1,"message":"64","line":2,"column":24,"nodeType":"59","messageId":"60","endLine":2,"endColumn":29},{"ruleId":"57","severity":1,"message":"73","line":4,"column":7,"nodeType":"59","messageId":"60","endLine":4,"endColumn":12},"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'FormHelperText' is defined but never used.","'UploadOutlined' is defined but never used.","'ErrorMessage' is defined but never used.","'Field' is defined but never used.","'DropzoneArea' is defined but never used.","'Yup' is defined but never used.","'loading' is assigned a value but never used.","'wordStyles' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'sleep' is assigned a value but never used."]